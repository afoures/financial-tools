{"version":3,"sources":["components/Menu.module.scss","components/Home.module.scss","AppContext.jsx","components/Menu.jsx","components/Home.jsx","components/EarlyRetirement/Simulator/SimulatorContext.jsx","components/EarlyRetirement/Simulator/Configuration.jsx","components/EarlyRetirement/Simulator/Charts.jsx","components/EarlyRetirement/Simulator/Results.jsx","components/EarlyRetirement/Simulator/Simulator.jsx","components/EarlyRetirement/Simulator/index.js","components/EarlyRetirement/EarlyRetirement.jsx","components/EarlyRetirement/index.js","App.js","index.js","components/EarlyRetirement/Simulator/Results.module.scss","components/EarlyRetirement/Simulator/Configuration.module.scss"],"names":["module","exports","AppProvider","children","className","Menu","styles","header","to","Home","home","SimulatorContext","createContext","useConfig","useContext","config","updateConfig","SimulatorStateProvider","value","useState","stockReturns","bondReturns","avgTaxRate","goal","amount","wr","spending","income","investments","portfolio","Provider","castForm","form","cast","Object","keys","reduce","castedForm","key","isNumber","isNaN","Number","InputGroup","name","label","registered","error","htmlFor","defaultValue","ref","Basic","useForm","mode","register","handleSubmit","errors","basic","onChange","required","validate","DynamicGroup","title","dataKey","reset","list","setList","useEffect","map","item","index","age","onClick","id","copy","splice","remove","onSubmit","elem","placeholder","type","DynamicPortfolio","getValues","isOne","values","stock","bond","join","repartition","newElem","Dynamic","dynamic","Goal","Configuration","configuration","Summary","boundaries","investmentsSummary","useMemo","min","investment","incomeOverSpending","width","height","data","syncId","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","stroke","fillOpacity","fill","stackId","Retirement","balance","target","evolution","current","toFixed","y","computeInformations","lastAmount","Array","years","_","year","found","find","computeInvestments","computeRepartition","lastRepartition","cash","computeBalance","returns","savings","lastBalance","saved","last","past","futureInvestment","diffInvestment","lastInvestment","Math","max","future","diff","computeCompoundInterests","simulate","console","log","forEach","getBoundaries","computeSavings","Results","style","results","main","informations","Simulator","EarlyRetirement","Content","props","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bac3f3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Menu_header__2qNDD\",\"click\":\"Menu_click__3dA3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"click\":\"Home_click__1HOmN\"};","import React from 'react'\nimport { HashRouter } from 'react-router-dom'\n\nexport function AppProvider({ children }) {\n    return (\n        <div className=\"app\">\n            <HashRouter>\n                {children}\n            </HashRouter>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport styles from './Menu.module.scss'\n\nfunction Menu() {\n    return (\n        <header className={styles.header}>\n            <aside>\n                financial tools\n            </aside>\n            <nav>\n                <Link to='/'>Home</Link>\n                <Link to='/early-retirement'>Early Retirement</Link>\n            </nav>\n        </header>\n    )\n}\n\nexport default Menu\n","import React from 'react'\n\nimport styles from './Home.module.scss'\n\nfunction Home() {\n    return (\n        <article className={styles.home}>\n            <p>\n                Hello à tous, voici un petit side project pour m'occuper durant le confinement. Je compte de temps en temps rajouter d'autres outils en fonction de mon temps libre et de ma motivation.\n            </p>\n            <p>\n                Aujourd'hui un seul outil est disponible: un calculateur de préretraite.\n            </p>\n            <p>\n                Vous pouvez me faire vos retours sur discord (afoures#7719).\n            </p>\n        </article>\n    )\n}\n\nexport default Home\n","import React, { createContext, useContext, useState, useEffect } from 'react'\n\nexport const SimulatorContext = createContext()\n\nexport function useConfig() {\n    const [config, updateConfig] = useContext(SimulatorContext)\n\n    return {\n        config,\n        updateConfig,\n    }\n}\n\nexport function SimulatorStateProvider({ children }) {\n    const initialState = {\n        stockReturns: 0.081,\n        bondReturns: 0.024,\n        avgTaxRate: 0.3,\n        goal: {\n            amount: 30000,\n            wr: 0.04,\n        },\n        spending: [\n        ],\n        income: [\n        ],\n        investments: [\n        ],\n        portfolio: [\n        ],\n    }\n\n    const value = useState(initialState)\n\n    return (\n        <SimulatorContext.Provider value={value}>\n            {children}\n        </SimulatorContext.Provider>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\n\nimport { useConfig } from './SimulatorContext'\n\nimport styles from './Configuration.module.scss'\n\nconst castForm = (form, cast) => Object.keys(form).reduce((castedForm, key) => {\n    castedForm[key] = cast(form[key])\n    return castedForm\n}, {})\n\nconst isNumber = (value) => !isNaN(Number(value))\n\nconst InputGroup = ({ name, label, value, registered, error }) => (\n    <div className={styles['input-group']}>\n        <label htmlFor={name} >{label}</label>\n        <input className={error && styles.error} name={name} defaultValue={value} ref={registered}/>\n    </div>\n)\n\nfunction Basic() {\n    const { register, handleSubmit, errors } = useForm({ mode: 'onBlur' })\n    const { config, updateConfig } = useConfig()\n\n    function onChange(form) {\n        updateConfig(config => ({...config, ...castForm(form, Number)}))\n    }\n\n    return (\n        <form\n            className={styles.basic}\n            onChange={handleSubmit(onChange)}\n        >\n            <InputGroup\n                name='stockReturns'\n                label='Rendement annuel des Actions'\n                value={config.stockReturns}\n                registered={register({ required: true, validate: isNumber })}\n                error={errors.stockReturns}\n            />\n            <InputGroup\n                name='bondReturns'\n                label='Rendement annuel des Obligations'\n                value={config.bondReturns}\n                registered={register({ required: true, validate: isNumber })}\n                error={errors.bondReturns}\n            />\n            <InputGroup\n                name='avgTaxRate'\n                label=\"Taux d'imposition sur plus-values\"\n                value={config.avgTaxRate}\n                registered={register({ required: true, validate: isNumber })}\n                error={errors.avgTaxRate}\n            />\n        </form>\n    )\n}\n\nfunction DynamicGroup({ name, title, dataKey }) {\n    const { register, handleSubmit, errors, reset } = useForm()\n    const { config, updateConfig } = useConfig()\n\n    const [list, setList] = useState(config[name])\n\n    const removeElem = (id) => {\n        setList(list => {\n            const copy = [...list]\n            copy.splice(id, 1)\n            return copy\n        })\n    }\n\n    const addElem = (elem) => {\n        setList(list => [...list, castForm(elem, Number)])\n        reset()\n    }\n\n    useEffect(() => {\n        updateConfig(config => ({...config, [name]: list}))\n    }, [list, name, updateConfig])\n\n    return (\n        <div className={styles['dynamic-group']}>\n            <h3>\n                {title}\n            </h3>\n            <div className={styles['dynamic-list']}>\n                <div className={styles.header}>\n                    <span className={styles['key-title']}>age</span>\n                    <span className={styles['value-title']}>{dataKey}</span>\n                </div>\n                {list.map((item, index) =>\n                    <div\n                        className={styles.item}\n                        key={index}\n                    >\n                        <span className={styles.key}>{item.age}</span>\n                        <span className={styles.value}>{item[dataKey]}</span>\n                        <span\n                            onClick={() => removeElem(index)}\n                            className={styles.remove}\n                        >⨯</span>\n                    </div>\n                )}\n            </div>\n            <form\n                className={styles['add-item']}\n                onSubmit={handleSubmit(addElem)}\n            >\n                <input className={errors.age && styles.error} name=\"age\" placeholder=\"age\" ref={register({required: true, validate: isNumber})} />\n                <input className={errors[dataKey] && styles.error} name={dataKey} placeholder={dataKey} ref={register({required: true, validate: isNumber})} />\n                <button type='submit' >add</button>\n            </form>\n        </div>\n    )\n}\n\nfunction DynamicPortfolio() {\n    const { register, handleSubmit, getValues, errors, reset } = useForm()\n    const { config, updateConfig } = useConfig()\n\n    const [list, setList] = useState(config.portfolio)\n\n    const isOne = () => {\n        const values = getValues()\n        return (Number(values.stock) + Number(values.bond)) === 1\n    }\n\n    const removeElem = (id) => {\n        setList(list => {\n            const copy = [...list]\n            copy.splice(id, 1)\n            return copy\n        })\n    }\n\n    const addElem = (form) => {\n        const elem = castForm(form, Number)\n\n        const newElem = {\n            age: elem.age,\n            repartition: {\n                stock: elem.stock,\n                bond: elem.bond,\n            }\n        }\n        setList(list => [...list, newElem])\n        reset()\n    }\n\n    useEffect(() => {\n        updateConfig(config => ({...config, portfolio: list}))\n    }, [list, updateConfig])\n\n    return (\n        <div className={styles['dynamic-portfolio']}>\n            <h3>\n                portfolio\n            </h3>\n            <div className={styles['dynamic-list']}>\n                <div className={styles.header}>\n                    <span className={styles['key-title']}>age</span>\n                    <span className={styles['value-title']}>{['stock', 'bond'].join(' - ')}</span>\n                </div>\n                {list.map((item, index) =>\n                    <div\n                        className={styles.item}\n                        key={index}\n                    >\n                        <span className={styles.key}>{item.age}</span>\n                        <span className={styles.value}>{`${item.repartition.stock} - ${item.repartition.bond}`}</span>\n                        <span\n                            onClick={() => removeElem(index)}\n                            className={styles.remove}\n                        >⨯</span>\n                    </div>\n                )}\n            </div>\n            <form\n                className={styles['add-item']}\n                onSubmit={handleSubmit(addElem)}\n            >\n                <input className={errors.age && styles.error} name=\"age\" placeholder=\"age\" ref={register({required: true, validate: isNumber})} />\n                <input className={errors.stock && styles.error} name=\"stock\" placeholder=\"stock\" ref={register({required: true, validate: {isNumber, isOne}})} />\n                <input className={errors.bond && styles.error} name=\"bond\" placeholder=\"bond\" ref={register({required: true, validate: {isNumber, isOne}})} />\n                <button type='submit' >add</button>\n            </form>\n        </div>\n    )\n}\n\n\nfunction Dynamic() {\n    return (\n        <div className={styles.dynamic}>\n            <DynamicGroup\n                title='Investissements'\n                name='investments'\n                dataKey='amount'\n            />\n            <DynamicGroup\n                title='Revenus'\n                name='income'\n                dataKey='amount'\n            />\n            <DynamicGroup\n                title='Dépenses'\n                name='spending'\n                dataKey='amount'\n            />\n            <DynamicPortfolio />\n        </div>\n    )\n}\n\nfunction Goal() {\n    const { register, handleSubmit, errors } = useForm()\n    const { config, updateConfig } = useConfig()\n\n    function onChange(form) {\n        updateConfig(config => ({...config, goal: castForm(form, Number)}))\n    }\n\n    return (\n        <form\n            className={styles.goal}\n            onChange={handleSubmit(onChange)}\n        >\n            <InputGroup\n                name='amount'\n                label='Dépenses liées à la retraite'\n                value={config.goal.amount}\n                registered={register({ required: true, validate: isNumber })}\n                error={errors.amount}\n            />\n            <InputGroup\n                name='wr'\n                label='Taux de retrait sécurisé'\n                value={config.goal.wr}\n                registered={register({ required: true, validate: isNumber })}\n                error={errors.wr}\n            />\n        </form>\n    )\n}\n\nfunction Configuration() {\n    return (\n        <div className={styles.configuration} >\n            <Basic />\n            <Dynamic />\n            <Goal />\n        </div>\n    )\n}\n\nexport default Configuration\n","import React, { useMemo } from 'react'\n\nimport {\n    ResponsiveContainer,\n    ComposedChart,\n    AreaChart,\n    Area,\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    ReferenceLine,\n    Tooltip\n} from 'recharts'\n\nexport function Summary({ boundaries, income, spending, investments, repartition }) {\n    const investmentsSummary = useMemo(() => {\n        return investments.map((amount, index) => ({\n            age: boundaries.min + index,\n            investment: amount,\n        }))\n    }, [investments, boundaries])\n\n    const incomeOverSpending = useMemo(() => {\n        return income.map((amount, index) => ({\n            age: boundaries.min + index,\n            income: amount,\n            spending: spending[index],\n        }))\n    }, [income, spending, boundaries])\n\n    const portfolio = useMemo(() => {\n        return repartition.map((portfolio, index) => ({\n            age: boundaries.min + index,\n            ...portfolio,\n        }))\n    }, [repartition, boundaries])\n\n    return (\n        <div>\n            <h2>\n                Summary\n            </h2>\n            <AreaChart\n                width={320}\n                height={160}\n                data={incomeOverSpending}\n                syncId=\"summary\"\n            >\n                <defs>\n                    <linearGradient id=\"colorSpending\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                        <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                    </linearGradient>\n                    <linearGradient id=\"colorIncome\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                        <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                    </linearGradient>\n                </defs>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"age\" stroke=\"#ccc\" />\n                <YAxis stroke=\"#ccc\" />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"income\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorIncome)\"/>\n                <Area type=\"monotone\" dataKey=\"spending\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorSpending)\"/>\n            </AreaChart>\n            <BarChart\n                width={320}\n                height={160}\n                data={investmentsSummary}\n                syncId=\"summary\"\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"age\" stroke=\"#ccc\" />\n                <YAxis stroke=\"#ccc\" />\n                <Tooltip />\n                <Bar dataKey=\"investment\" fill=\"#82ca9d\" />\n            </BarChart>\n            <AreaChart\n                width={320}\n                height={160}\n                data={portfolio}\n                syncId=\"summary\"\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"age\" stroke=\"#ccc\" />\n                <YAxis stroke=\"#ccc\" />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"bond\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                <Area type=\"monotone\" dataKey=\"stock\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n            </AreaChart>\n        </div>\n    )\n}\n\nexport function Retirement({ boundaries, balance, target }) {\n    const evolution = useMemo(() => {\n        return balance.map((current, index) => ({\n            age: boundaries.min + index,\n            ...current,\n        }))\n    }, [balance, boundaries])\n\n    const portfolio = useMemo(() => {\n        return balance.map((current, index) => ({\n            age: boundaries.min + index,\n            stock: (current.stock / (current.bond + current.stock)).toFixed(3),\n            bond: (current.bond / (current.bond + current.stock)).toFixed(3),\n        }))\n    }, [balance, boundaries])\n\n    return (\n        <div>\n            <ResponsiveContainer width=\"100%\" height={320} >\n                <ComposedChart\n                    data={evolution}\n                    syncId=\"result\"\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"age\" stroke=\"#ccc\" />\n                    <YAxis stroke=\"#ccc\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"bond\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                    <Area type=\"monotone\" dataKey=\"stock\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n                    <ReferenceLine y={target} label=\"FIRE Target\" stroke=\"red\" />\n                </ComposedChart>\n            </ResponsiveContainer>\n            <ResponsiveContainer width=\"100%\" height={224} >\n                <AreaChart\n                    data={portfolio}\n                    syncId=\"result\"\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"age\" stroke=\"#ccc\" />\n                    <YAxis stroke=\"#ccc\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"bond\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                    <Area type=\"monotone\" dataKey=\"stock\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n","import React, { useMemo } from 'react'\n\nimport { useConfig } from './SimulatorContext'\n\nimport style from './Results.module.scss'\n\nimport * as Charts from './Charts'\n\n// 110 rule -> stock % = 110 - current age\n\n\nconst getBoundaries = (config) => {\n    const max = 80\n    let min = max\n\n    console.log(config)\n\n    config.income.forEach((elem) => {\n        if ( elem.age < min) min = elem.age\n    })\n\n    config.spending.forEach((elem) => {\n        if ( elem.age < min) min = elem.age\n    })\n\n    config.investments.forEach((elem) => {\n        if ( elem.age < min) min = elem.age\n    })\n\n    config.portfolio.forEach((elem) => {\n        if ( elem.age < min) min = elem.age\n    })\n\n    const years = max - min\n\n    return { min, max, years }\n}\n\nconst computeInformations = (boundaries, data) => {\n    let lastAmount = 0\n    return [...Array(boundaries.years)].map((_, year) => {\n        const found = data.find(elem => elem.age === boundaries.min + year)\n        if ( found ) lastAmount = found.amount\n        return lastAmount\n    })\n}\n\nconst computeInvestments = (boundaries, data) => {\n    return [...Array(boundaries.years)].map((_, year) => {\n        const found = data.find(elem => elem.age === boundaries.min + year)\n        if ( found ) return found.amount\n        return 0\n    })\n}\n\nconst computeRepartition = (boundaries, data) => {\n    let lastRepartition = {\n        stock: 0,\n        bond: 0,\n        cash: 0,\n    }\n    return [...Array(boundaries.years)].map((_, year) => {\n        const found = data.find(elem => elem.age === boundaries.min + year)\n        if ( found ) lastRepartition = found.repartition\n        return lastRepartition\n    })\n}\n\nconst computeSavings = (income, spending) => {\n    return income.map((amount, index) => amount - spending[index])\n}\n\n\n// Balance(Y)   =   P(1 + r)Y   +   c[ ((1 + r)Y + 1 - (1 + r)) / r ]\n//\n// last balance - investments - savings - periode - repartition\n//\n// lastValue * (1 + returns) ** year\n// + savings * (((1 + returns) ** (year + 1) - (1 + returns)) / returns)\n\nconst computeCompoundInterests = (last, investment, saved, returns, repartition) => {\n    const past = last.stock + last.bond\n\n    const futureInvestment = past + investment\n\n    const diffInvestment = {\n        stock: (repartition.stock * futureInvestment) - last.stock,\n        bond: (repartition.bond * futureInvestment) - last.bond,\n    }\n\n    const lastInvestment = {\n        stock: last.stock + Math.min(investment, Math.max(0, diffInvestment.stock)),\n        bond: last.bond + Math.min(investment, Math.max(0, diffInvestment.bond)),\n    }\n\n    const future = past + investment + saved\n\n    const diff = {\n        stock: (repartition.stock * future) - lastInvestment.stock,\n        bond: (repartition.bond * future) - lastInvestment.bond,\n    }\n\n    return {\n        stock: last.stock * (1 + returns.stock)\n            + Math.min(investment, Math.max(0, diffInvestment.stock)) * (1 + returns.stock)\n            + Math.min(saved, Math.max(0, diff.stock)) * (1 + returns.stock),\n        bond: last.bond * (1 + returns.bond)\n            + Math.min(investment, Math.max(0, diffInvestment.bond)) * (1 + returns.bond)\n            + Math.min(saved, Math.max(0, diff.bond)) * (1 + returns.bond),\n    }\n}\n\n\nconst computeBalance = (returns, investments, savings, repartition) => {\n    let lastBalance = {\n        stock: 0,\n        bond: 0,\n    }\n\n    const balance = savings.map((saved, index) => {\n        lastBalance = computeCompoundInterests(\n            lastBalance,\n            investments[index],\n            saved,\n            returns,\n            repartition[index]\n        )\n\n        return lastBalance\n    })\n\n    return balance\n}\n\n\nfunction simulate(config) {\n\n    const boundaries = getBoundaries(config)\n\n    console.log(boundaries)\n\n    const [income, spending, investments, repartition] = [\n        computeInformations(boundaries, config.income),\n        computeInformations(boundaries, config.spending),\n        computeInvestments(boundaries, config.investments),\n        computeRepartition(boundaries, config.portfolio),\n    ]\n\n    const target = (config.goal.amount / (1 - config.avgTaxRate)) / config.goal.wr\n\n    const savings = computeSavings(income, spending)\n\n    const balance = computeBalance({\n        stock: config.stockReturns,\n        bond: config.bondReturns,\n    }, investments, savings, repartition)\n\n    console.log(balance)\n\n    return {\n        boundaries,\n        income,\n        spending,\n        investments,\n        repartition,\n        savings,\n        balance,\n        target,\n    }\n}\n\n\nfunction Results() {\n    const { config } = useConfig()\n\n    const {\n        boundaries,\n        income,\n        spending,\n        investments,\n        repartition,\n        balance,\n        target,\n    } = useMemo(() => simulate(config), [config])\n\n    return (\n        <div className={style.results}>\n            <Charts.Summary\n                boundaries={boundaries}\n                income={income}\n                spending={spending}\n                investments={investments}\n                repartition={repartition}\n            />\n            <div className={style.main}>\n                <div className={style.informations}>\n                    <p>Target = ({config.goal.amount} / {1 - config.avgTaxRate}) / {config.goal.wr} = {target.toFixed(2)}</p>\n                </div>\n                <Charts.Retirement\n                    boundaries={boundaries}\n                    balance={balance}\n                    target={target}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Results\n","import React from 'react'\n\nimport { SimulatorStateProvider } from './SimulatorContext'\n\nimport Configuration from './Configuration'\nimport Results from './Results'\n\nfunction Simulator() {\n    return (\n        <SimulatorStateProvider>\n            <Configuration />\n            <Results />\n        </SimulatorStateProvider>\n    )\n}\n\nexport default Simulator\n","import Simulator from './Simulator'\n\nexport default Simulator\n","import React from 'react'\n\nimport Simulator from './Simulator'\n\nfunction EarlyRetirement() {\n    return (\n        <article>\n            <div>\n                <p>\n                    Ce calculateur / visualiseur de retraite anticipée est conçu pour projeter le nombre d'années qui vous séparent de la retraite, en fonction de quelques données clés telles que les revenus et les dépenses annuels, le taux de croissance des revenus, les dépenses annuelles prévues à la retraite et la répartition des actifs. Il s'agit d'un calculateur de préretraite qui est utile avant votre départ à la retraite pour avoir une idée du nombre d'années qu'il vous faudra probablement pour accumuler suffisamment d'argent pour prendre votre retraite.\n                </p>\n            </div>\n            <Simulator />\n        </article>\n    )\n}\n\nexport default EarlyRetirement\n","import EarlyRetirement from './EarlyRetirement'\n\nexport default EarlyRetirement\n","import React from 'react'\nimport { Routes, Route, Outlet } from 'react-router-dom'\nimport { AppProvider } from './AppContext'\n\nimport Menu from './components/Menu'\nimport Home from './components/Home'\nimport EarlyRetirement from './components/EarlyRetirement'\n\nconst Content = (props) => (\n    <main {...props} >\n        <Outlet />\n        {/*\n        <aside>\n        </aside>\n        */}\n    </main>\n)\n\nfunction App() {\n  return (\n      <AppProvider>\n        <Menu />\n        <Routes>\n            <Route path='/*' element={<Content />} >\n                <Route path='' element={<Home />} />\n                <Route path='early-retirement' element={<EarlyRetirement />} />\n            </Route>\n        </Routes>\n      </AppProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"Results_results__3Bszj\",\"main\":\"Results_main__33oQQ\",\"informations\":\"Results_informations__3P7aK\",\"click\":\"Results_click__3TZpp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"configuration\":\"Configuration_configuration__lembR\",\"error\":\"Configuration_error__2gdp3\",\"basic\":\"Configuration_basic__3BtaF\",\"dynamic\":\"Configuration_dynamic__2VQiA\",\"goal\":\"Configuration_goal__1gR7h\",\"input-group\":\"Configuration_input-group__1D6IB\",\"dynamic-group\":\"Configuration_dynamic-group__Ul93l\",\"dynamic-portfolio\":\"Configuration_dynamic-portfolio__12cUU\",\"dynamic-list\":\"Configuration_dynamic-list__3wrYy\",\"header\":\"Configuration_header__1-ueq\",\"key-title\":\"Configuration_key-title__i3tFS\",\"value-title\":\"Configuration_value-title__1xQC0\",\"item\":\"Configuration_item__1ZS3h\",\"key\":\"Configuration_key__13x9Z\",\"value\":\"Configuration_value__3shjA\",\"remove\":\"Configuration_remove__9oc4I\",\"add-item\":\"Configuration_add-item__3arbO\",\"click\":\"Configuration_click__BEKVz\"};"],"sourceRoot":""}