{"version":3,"sources":["components/Helper.module.scss","components/EarlyRetirement/Simulator/Configuration.module.scss","components/Menu.module.scss","components/Home.module.scss","AppContext.jsx","components/Menu.jsx","components/Home.jsx","components/EarlyRetirement/Simulator/SimulatorContext.jsx","components/Helper.jsx","components/EarlyRetirement/Simulator/Configuration.jsx","components/EarlyRetirement/Simulator/Charts.jsx","components/EarlyRetirement/Simulator/Results.jsx","components/EarlyRetirement/Simulator/Simulator.jsx","components/EarlyRetirement/Simulator/index.js","components/EarlyRetirement/EarlyRetirement.jsx","components/EarlyRetirement/index.js","App.js","index.js","components/EarlyRetirement/Simulator/Results.module.scss"],"names":["module","exports","AppProvider","children","className","Menu","styles","header","to","Home","home","SimulatorContext","createContext","useConfig","useContext","config","updateConfig","SimulatorStateProvider","value","useState","stockReturns","bondReturns","avgTaxRate","goal","amount","wr","spending","income","investments","portfolio","Provider","Helper","id","title","style","helper","data-tip","data-for","tooltip","place","effect","aria-haspopup","castForm","form","cast","Object","keys","reduce","castedForm","key","isNumber","isNaN","Number","InputGroup","name","label","registered","error","htmlFor","defaultValue","ref","Basic","useForm","mode","register","handleSubmit","errors","basic","onChange","required","validate","byAge","a","b","age","ListGroup","inputs","reset","list","setList","useEffect","map","input","index","placeholder","item","onClick","current","splice","remove","onSubmit","sort","validation","type","Dynamic","dynamic","Goal","Configuration","configuration","Summary","boundaries","savings","repartition","savingsSummary","useMemo","min","saved","investmentsSummary","investment","incomeOverSpending","width","height","data","syncId","strokeDasharray","dataKey","stroke","fill","x1","y1","x2","y2","offset","stopColor","stopOpacity","fillOpacity","stackId","Retirement","balance","target","evolution","stock","bond","toFixed","y","computeInformations","lastAmount","Array","years","_","year","found","find","elem","computeInvestments","computeRepartition","lastRepartition","cash","computeBalance","returns","lastBalance","last","past","futureInvestment","diffInvestment","lastInvestment","Math","max","future","diff","computeCompoundInterests","simulate","forEach","getBoundaries","computeSavings","Results","results","main","informations","Simulator","EarlyRetirement","margin","marginBottom","Content","props","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f62b9a68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"helper\":\"Helper_helper__1ZvMQ\",\"tooltip\":\"Helper_tooltip__3-QdT\",\"click\":\"Helper_click__12Squ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"configuration\":\"Configuration_configuration__lembR\",\"error\":\"Configuration_error__2gdp3\",\"basic\":\"Configuration_basic__3BtaF\",\"goal\":\"Configuration_goal__1gR7h\",\"dynamic\":\"Configuration_dynamic__2VQiA\",\"input-group\":\"Configuration_input-group__1D6IB\",\"list-group\":\"Configuration_list-group__32Xdr\",\"list\":\"Configuration_list__2c-bL\",\"header\":\"Configuration_header__1-ueq\",\"item\":\"Configuration_item__1ZS3h\",\"remove\":\"Configuration_remove__9oc4I\",\"add-item\":\"Configuration_add-item__3arbO\",\"dynamic-portfolio\":\"Configuration_dynamic-portfolio__12cUU\",\"click\":\"Configuration_click__BEKVz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Menu_header__2qNDD\",\"click\":\"Menu_click__3dA3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"click\":\"Home_click__1HOmN\"};","import React from 'react'\nimport { HashRouter } from 'react-router-dom'\n\nexport function AppProvider({ children }) {\n    return (\n        <div className=\"app\">\n            <HashRouter>\n                {children}\n            </HashRouter>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport styles from './Menu.module.scss'\n\nfunction Menu() {\n    return (\n        <header className={styles.header}>\n            <aside>\n                outils financiers\n            </aside>\n            <nav>\n                <Link to='/'>Informations</Link>\n                <Link to='/early-retirement'>Retraite anticipée</Link>\n            </nav>\n        </header>\n    )\n}\n\nexport default Menu\n","import React from 'react'\n\nimport styles from './Home.module.scss'\n\nfunction Home() {\n    return (\n        <article className={styles.home}>\n            <p>\n                Hello à tous, voici un petit side project pour m'occuper durant le confinement. Je compte de temps en temps rajouter d'autres outils en fonction de mon temps libre et de ma motivation.\n            </p>\n            <p>\n                Aujourd'hui un seul outil est disponible: un calculateur de préretraite.\n            </p>\n            <p>\n                Vous pouvez me faire vos retours sur discord (afoures#7719).\n            </p>\n        </article>\n    )\n}\n\nexport default Home\n","import React, { createContext, useContext, useState } from 'react'\n\nexport const SimulatorContext = createContext()\n\nexport function useConfig() {\n    const [config, updateConfig] = useContext(SimulatorContext)\n\n    return {\n        config,\n        updateConfig,\n    }\n}\n\nexport function SimulatorStateProvider({ children }) {\n    const initialState = {\n        stockReturns: 0.081,\n        bondReturns: 0.024,\n        avgTaxRate: 0.3,\n        goal: {\n            amount: 30000,\n            wr: 0.04,\n        },\n        spending: [\n        ],\n        income: [\n        ],\n        investments: [\n        ],\n        portfolio: [\n        ],\n    }\n\n    const value = useState(initialState)\n\n    return (\n        <SimulatorContext.Provider value={value}>\n            {children}\n        </SimulatorContext.Provider>\n    )\n}\n","import React from 'react'\nimport ReactTooltip from 'react-tooltip'\n\nimport style from './Helper.module.scss'\n\nfunction Helper({ id, children, title }) {\n    return (\n        <>\n            <span className={style.helper} data-tip data-for={id}>?</span>\n            <ReactTooltip\n                className={style.tooltip}\n                id={id}\n                place='bottom'\n                effect='solid'\n                aria-haspopup='true'\n            >\n                <h3>{title}</h3>\n                {children}\n            </ReactTooltip>\n        </>\n    )\n}\n\nexport default Helper\n","import React, { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useConfig } from './SimulatorContext'\n\nimport styles from './Configuration.module.scss'\n\nimport Helper from '../../Helper'\n\n\n\n\nconst castForm = (form, cast) => Object.keys(form).reduce((castedForm, key) => {\n    castedForm[key] = cast(form[key])\n    return castedForm\n}, {})\n\nconst isNumber = (value) => !isNaN(Number(value))\n\n\n\n\n\n\nconst InputGroup = ({ name, label, value, registered, error, helper }) => (\n    <div className={styles['input-group']}>\n        <label\n            htmlFor={name}\n        >\n            {label}\n        </label>\n        { helper &&\n            <Helper title={label} id={name} >\n                {helper}\n            </Helper>\n        }\n        <input\n            className={error && styles.error}\n            name={name}\n            defaultValue={value}\n            ref={registered}\n        />\n    </div>\n)\n\nfunction Basic() {\n    const { register, handleSubmit, errors } = useForm({ mode: 'onBlur' })\n    const { config, updateConfig } = useConfig()\n\n    function onChange(form) {\n        updateConfig(config => ({...config, ...castForm(form, Number)}))\n    }\n\n    return (\n        <form\n            className={styles.basic}\n            onChange={handleSubmit(onChange)}\n        >\n            <InputGroup\n                name='stockReturns'\n                label='Rendement annuel des actions'\n                value={config.stockReturns}\n                registered={register({ required: true, validate: isNumber })}\n                error={errors.stockReturns}\n                helper={\n                    <p>\n                        Entrez les rendements réels des actions.\n                        Le rendement boursier moyen au cours \n                        des 150 dernières années était d'environ 8,1%.\n                    </p>\n                }\n            />\n            <InputGroup\n                name='bondReturns'\n                label='Rendement annuel des obligations'\n                value={config.bondReturns}\n                registered={register({ required: true, validate: isNumber })}\n                error={errors.bondReturns}\n                helper={\n                    <p>\n                        Entrez les rendements réels des obligations.\n                        Le rendement moyen des titres à revenu fixe au cours \n                        des 150 dernières années était d'environ 2,4 %.\n                    </p>\n                }\n            />\n            <InputGroup\n                name='avgTaxRate'\n                label=\"Taux d'imposition sur plus-values\"\n                value={config.avgTaxRate}\n                registered={register({ required: true, validate: isNumber })}\n                error={errors.avgTaxRate}\n                helper={\n                    <p>\n                        Indiquez votre taux d'imposition moyen \n                        . Les impôts ne sont appliqués que lors \n                        de la vente d'actifs. Ce taux gonflera \n                        le montant que vous devrez retirer \n                        annuellement de votre patrimoine boursier.\n                    </p>\n                }\n            />\n        </form>\n    )\n}\n\n\n\n\nconst byAge = (a, b) => Number(a.age) - Number(b.age)\n\n\n\n\nfunction ListGroup({ name, title, inputs = [], helper }) {\n    const { register, handleSubmit, errors, reset } = useForm()\n    const { config, updateConfig } = useConfig()\n\n    const [list, setList] = useState(config[name])\n\n    const removeFromList = id => setList(current => {\n        const list = [...current]\n        list.splice(id, 1)\n        return list\n    })\n\n    const addToList = item => setList(current => [\n        ...current,\n        castForm(item, Number)\n    ].sort(byAge))\n\n\n    useEffect(() => updateConfig(config => ({\n        ...config,\n        [name]: list,\n    })), [list, name, updateConfig])\n\n    return (\n        <div className={styles['list-group']} >\n            <h3>\n                {title}\n                { helper &&\n                    <Helper title={title} id={name} >\n                        {helper}\n                    </Helper>\n                }\n            </h3>\n            <div className={styles.list}>\n                <div className={styles.header}>\n                    {inputs.map((input, index) =>\n                        <span key={index}>{input.placeholder}</span>\n                    )}\n                </div>\n                {list.map((item, index) =>\n                    <div\n                        className={styles.item}\n                        key={index}\n                    >\n                        {inputs.map((input, index) =>\n                            <span key={index}>{item[input.name]}</span>\n                        )}\n                        <span\n                            onClick={() => removeFromList(index)}\n                            className={styles.remove}\n                        >⨯</span>\n                    </div>\n                )}\n            </div>\n            <form\n                className={styles['add-item']}\n                onSubmit={handleSubmit(addToList)}\n            >\n                {inputs.map((input, index) =>\n                    <input\n                        key={index}\n                        className={errors[input.name] && styles.error}\n                        name={input.name}\n                        placeholder={input.placeholder}\n                        ref={register({ required: true, validate: input.validation })}\n                    />\n                )}\n                <button type='submit' >Ajouter</button>\n            </form>\n        </div>\n    )\n}\n\n\nfunction Dynamic() {\n    return (\n        <div className={styles.dynamic}>\n            <ListGroup\n                title='Revenus réguliers'\n                name='income'\n                inputs={[\n                    {name: 'age', placeholder: 'age', validation: { isNumber }},\n                    {name: 'amount', placeholder: 'montant', validation: { isNumber }},\n                ]}\n            />\n            <ListGroup\n                title='Dépenses régulières'\n                name='spending'\n                inputs={[\n                    {name: 'age', placeholder: 'age', validation: { isNumber }},\n                    {name: 'amount', placeholder: 'montant', validation: { isNumber }},\n                ]}\n            />\n            <ListGroup\n                title='Investissements irréguliers'\n                name='investments'\n                inputs={[\n                    {name: 'age', placeholder: 'age', validation: { isNumber }},\n                    {name: 'amount', placeholder: 'montant', validation: { isNumber }},\n                ]}\n            />\n            <ListGroup\n                title='Répartition des actifs'\n                name='portfolio'\n                inputs={[\n                    {name: 'age', placeholder: 'age', validation: { isNumber }},\n                    {name: 'stock', placeholder: 'action', validation: { isNumber }},\n                    {name: 'bond', placeholder: 'obligation', validation: { isNumber }},\n                    // {name: 'cash', placeholder: 'cash', validation: { isNumber }},\n                ]}\n                helper={\n                    <p>\n                        Indiquez la repartition en pourcentage cible des actifs de votre portfolio.\n                    </p>\n                }\n            />\n        </div>\n    )\n}\n\nfunction Goal() {\n    const { register, handleSubmit, errors } = useForm()\n    const { config, updateConfig } = useConfig()\n\n    function onChange(form) {\n        updateConfig(config => ({...config, goal: castForm(form, Number)}))\n    }\n\n    return (\n        <form\n            className={styles.goal}\n            onChange={handleSubmit(onChange)}\n        >\n            <InputGroup\n                name='amount'\n                label='Dépenses liées à la retraite'\n                value={config.goal.amount}\n                registered={register({ required: true, validate: isNumber })}\n                error={errors.amount}\n                helper={\n                    <p>\n                        Indiquez le montant que vous prévoyez de dépenser \n                        annuellement pendant la retraite. N'oubliez pas \n                        que vous devrez peut-être payer des frais de santé \n                        supplémentaires une fois que vous aurez cessé de travailler.\n                    </p>\n                }\n            />\n            <InputGroup\n                name='wr'\n                label='Taux de retrait sécurisé'\n                value={config.goal.wr}\n                registered={register({ required: true, validate: isNumber })}\n                error={errors.wr}\n                helper={\n                    <>\n                    <p>\n                        Le taux de retrait sécurisé est le pourcentage de \n                        l'argent de votre retraite que vous prévoyez de \n                        liquider et de dépenser chaque année à partir de \n                        votre épargne. Il est calculé à partir de la valeur \n                        de votre épargne au moment de votre départ à la \n                        retraite. 4 % est généralement considéré comme un \n                        montant sûr pour une retraite de plus de 30 ans \n                        et vous oblige à économiser 25 fois les dépenses prévues.\n                    </p>\n                    <p>\n                        Les taux de retrait inférieurs (2 à 3 %) sont \n                        généralement considérés comme très sûrs et beaucoup \n                        plus prudents, mais ils vous obligent à épargner \n                        beaucoup plus d'argent pour la retraite.\n                    </p>\n                    </>\n                }\n            />\n        </form>\n    )\n}\n\nfunction Configuration() {\n    return (\n        <div className={styles.configuration} >\n            <Basic />\n            <Dynamic />\n            <Goal />\n        </div>\n    )\n}\n\nexport default Configuration\n","import React, { useMemo } from 'react'\n\nimport Helper from '../../Helper'\n\nimport {\n    ResponsiveContainer,\n    ComposedChart,\n    AreaChart,\n    Area,\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    ReferenceLine,\n    Tooltip\n} from 'recharts'\n\nexport function Summary({ boundaries, income, spending, investments, savings, repartition }) {\n    const savingsSummary = useMemo(() => {\n        return savings.map((amount, index) => ({\n            age: boundaries.min + index,\n            saved: amount,\n        }))\n    }, [savings, boundaries])\n\n    const investmentsSummary = useMemo(() => {\n        return investments.map((amount, index) => ({\n            age: boundaries.min + index,\n            investment: amount,\n        }))\n    }, [investments, boundaries])\n\n    const incomeOverSpending = useMemo(() => {\n        return income.map((amount, index) => ({\n            age: boundaries.min + index,\n            income: amount,\n            spending: spending[index],\n        }))\n    }, [income, spending, boundaries])\n\n    const portfolio = useMemo(() => {\n        return repartition.map((portfolio, index) => ({\n            age: boundaries.min + index,\n            ...portfolio,\n        }))\n    }, [repartition, boundaries])\n\n    return (\n        <div>\n            <h2>\n                Situation\n                <Helper title='Situation' id='summary'>\n                    <p>\n                        Ces graphiques résument la situation \n                        simulée en fonction des valeurs \n                        présentes plus haut.\n                    </p>\n                    <p>\n                        Le premier montre le montant calculé \n                        en tant qu'epargne régulière chaque année.\n                    </p>\n                    <p>\n                        Le deuxième permet de voir les montants \n                        d'investissement irréguliers pour chaque \n                        année de la simulation.\n                    </p>\n                    <p>\n                        Le troisième compare les revenus reguliers \n                        et les dépenses regulières.\n                    </p>\n                    <p>\n                        Le dernier montre l'évolution de la repartition \n                        des actifs du portefeuille boursier.\n                    </p>\n                </Helper>\n            </h2>\n            <BarChart\n                width={320}\n                height={160}\n                data={savingsSummary}\n                syncId=\"summary\"\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"age\" stroke=\"#ccc\" />\n                <YAxis stroke=\"#ccc\" />\n                <Tooltip />\n                <Bar dataKey=\"saved\" fill=\"#82ca9d\" />\n            </BarChart>\n            <BarChart\n                width={320}\n                height={160}\n                data={investmentsSummary}\n                syncId=\"summary\"\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"age\" stroke=\"#ccc\" />\n                <YAxis stroke=\"#ccc\" />\n                <Tooltip />\n                <Bar dataKey=\"investment\" fill=\"#82ca9d\" />\n            </BarChart>\n            <AreaChart\n                width={320}\n                height={160}\n                data={incomeOverSpending}\n                syncId=\"summary\"\n            >\n                <defs>\n                    <linearGradient id=\"colorSpending\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                        <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                    </linearGradient>\n                    <linearGradient id=\"colorIncome\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                        <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                    </linearGradient>\n                </defs>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"age\" stroke=\"#ccc\" />\n                <YAxis stroke=\"#ccc\" />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"income\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorIncome)\"/>\n                <Area type=\"monotone\" dataKey=\"spending\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorSpending)\"/>\n            </AreaChart>\n            <AreaChart\n                width={320}\n                height={160}\n                data={portfolio}\n                syncId=\"summary\"\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"age\" stroke=\"#ccc\" />\n                <YAxis stroke=\"#ccc\" />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"bond\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                <Area type=\"monotone\" dataKey=\"stock\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n            </AreaChart>\n        </div>\n    )\n}\n\nexport function Retirement({ boundaries, balance, target }) {\n    const evolution = useMemo(() => {\n        return balance.map((current, index) => ({\n            age: boundaries.min + index,\n            ...current,\n        }))\n    }, [balance, boundaries])\n\n    const portfolio = useMemo(() => {\n        return balance.map((current, index) => ({\n            age: boundaries.min + index,\n            stock: (current.stock / (current.bond + current.stock)).toFixed(3),\n            bond: (current.bond / (current.bond + current.stock)).toFixed(3),\n        }))\n    }, [balance, boundaries])\n\n    return (\n        <div>\n            <ResponsiveContainer width=\"100%\" height={320} >\n                <ComposedChart\n                    data={evolution}\n                    syncId=\"result\"\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"age\" stroke=\"#ccc\" />\n                    <YAxis stroke=\"#ccc\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"bond\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                    <Area type=\"monotone\" dataKey=\"stock\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n                    <ReferenceLine y={target} label=\"FIRE Target\" stroke=\"red\" />\n                </ComposedChart>\n            </ResponsiveContainer>\n            <ResponsiveContainer width=\"100%\" height={224} >\n                <AreaChart\n                    data={portfolio}\n                    syncId=\"result\"\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"age\" stroke=\"#ccc\" />\n                    <YAxis stroke=\"#ccc\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"bond\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                    <Area type=\"monotone\" dataKey=\"stock\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { useConfig } from './SimulatorContext'\n\nimport style from './Results.module.scss'\n\nimport Helper from '../../Helper'\nimport * as Charts from './Charts'\n\n// 110 rule -> stock % = 110 - current age\n\n\nconst getBoundaries = (config) => {\n    const max = 80\n    let min = max\n\n    config.income.forEach((elem) => {\n        if ( elem.age < min) min = elem.age\n    })\n\n    config.spending.forEach((elem) => {\n        if ( elem.age < min) min = elem.age\n    })\n\n    config.investments.forEach((elem) => {\n        if ( elem.age < min) min = elem.age\n    })\n\n    config.portfolio.forEach((elem) => {\n        if ( elem.age < min) min = elem.age\n    })\n\n    const years = max - min\n\n    return { min, max, years }\n}\n\nconst computeInformations = (boundaries, data) => {\n    let lastAmount = 0\n    return [...Array(boundaries.years)].map((_, year) => {\n        const found = data.find(elem => elem.age === boundaries.min + year)\n        if ( found ) lastAmount = found.amount\n        return lastAmount\n    })\n}\n\nconst computeInvestments = (boundaries, data) => {\n    return [...Array(boundaries.years)].map((_, year) => {\n        const found = data.find(elem => elem.age === boundaries.min + year)\n        if ( found ) return found.amount\n        return 0\n    })\n}\n\nconst computeRepartition = (boundaries, data) => {\n    let lastRepartition = {\n        stock: 0,\n        bond: 0,\n        cash: 0,\n    }\n    return [...Array(boundaries.years)].map((_, year) => {\n        const found = data.find(elem => elem.age === boundaries.min + year)\n        if ( found ) {\n            lastRepartition = {\n                stock: found.stock,\n                bond: found.bond,\n                cash: found.cash,\n            }\n        }\n        return lastRepartition\n    })\n}\n\nconst computeSavings = (income, spending) => {\n    return income.map((amount, index) => Math.max(0, amount - spending[index]))\n}\n\n\n// Balance(Y)   =   P(1 + r)Y   +   c[ ((1 + r)Y + 1 - (1 + r)) / r ]\n//\n// last balance - investments - savings - periode - repartition\n//\n// lastValue * (1 + returns) ** year\n// + savings * (((1 + returns) ** (year + 1) - (1 + returns)) / returns)\n\nconst computeCompoundInterests = (last, investment, saved, returns, repartition) => {\n    const past = last.stock + last.bond\n\n    const futureInvestment = past + investment\n\n    const diffInvestment = {\n        stock: (repartition.stock * futureInvestment) - last.stock,\n        bond: (repartition.bond * futureInvestment) - last.bond,\n    }\n\n    const lastInvestment = {\n        stock: last.stock + Math.min(investment, Math.max(0, diffInvestment.stock)),\n        bond: last.bond + Math.min(investment, Math.max(0, diffInvestment.bond)),\n    }\n\n    const future = past + investment + saved\n\n    const diff = {\n        stock: (repartition.stock * future) - lastInvestment.stock,\n        bond: (repartition.bond * future) - lastInvestment.bond,\n    }\n\n    return {\n        stock: last.stock * (1 + returns.stock)\n            + Math.min(investment, Math.max(0, diffInvestment.stock)) * (1 + returns.stock)\n            + Math.min(saved, Math.max(0, diff.stock)) * (1 + returns.stock),\n        bond: last.bond * (1 + returns.bond)\n            + Math.min(investment, Math.max(0, diffInvestment.bond)) * (1 + returns.bond)\n            + Math.min(saved, Math.max(0, diff.bond)) * (1 + returns.bond),\n    }\n}\n\n\nconst computeBalance = (returns, investments, savings, repartition) => {\n    let lastBalance = {\n        stock: 0,\n        bond: 0,\n    }\n\n    const balance = savings.map((saved, index) => {\n        lastBalance = computeCompoundInterests(\n            lastBalance,\n            investments[index],\n            saved,\n            returns,\n            repartition[index]\n        )\n\n        return lastBalance\n    })\n\n    return balance\n}\n\n\nfunction simulate(config) {\n\n    const boundaries = getBoundaries(config)\n\n    const [income, spending, investments, repartition] = [\n        computeInformations(boundaries, config.income),\n        computeInformations(boundaries, config.spending),\n        computeInvestments(boundaries, config.investments),\n        computeRepartition(boundaries, config.portfolio),\n    ]\n\n    const target = (config.goal.amount / (1 - config.avgTaxRate)) / config.goal.wr\n\n    const savings = computeSavings(income, spending)\n\n    const balance = computeBalance({\n        stock: config.stockReturns,\n        bond: config.bondReturns,\n    }, investments, savings, repartition)\n\n    return {\n        boundaries,\n        income,\n        spending,\n        investments,\n        repartition,\n        savings,\n        balance,\n        target,\n    }\n}\n\n\nfunction Results() {\n    const { config } = useConfig()\n\n    const {\n        boundaries,\n        income,\n        spending,\n        investments,\n        savings,\n        repartition,\n        balance,\n        target,\n    } = useMemo(() => simulate(config), [config])\n\n    return (\n        <div className={style.results}>\n            <Charts.Summary\n                boundaries={boundaries}\n                income={income}\n                spending={spending}\n                investments={investments}\n                savings={savings}\n                repartition={repartition}\n            />\n            <div className={style.main}>\n                <div className={style.informations}>\n                    <p>\n                        Target\n                        = ({config.goal.amount} / {1 - config.avgTaxRate}) / {config.goal.wr} = {target.toFixed(2)}\n                        <Helper title='Target'>\n                            <p>\n                                Il s'agit du montant que vous devez épargner en vue de votre retraite.\n                            </p>\n                        </Helper>\n                    </p>\n                </div>\n                <Charts.Retirement\n                    boundaries={boundaries}\n                    balance={balance}\n                    target={target}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Results\n","import React from 'react'\n\nimport { SimulatorStateProvider } from './SimulatorContext'\n\nimport Configuration from './Configuration'\nimport Results from './Results'\n\nfunction Simulator() {\n    return (\n        <SimulatorStateProvider>\n            <Configuration />\n            <Results />\n        </SimulatorStateProvider>\n    )\n}\n\nexport default Simulator\n","import Simulator from './Simulator'\n\nexport default Simulator\n","import React from 'react'\n\nimport Simulator from './Simulator'\n\nfunction EarlyRetirement() {\n    return (\n        <article>\n            <div>\n                <p>\n                    Ce calculateur / visualiseur de retraite anticipée est conçu pour projeter le nombre d'années qui vous séparent de la retraite, en fonction de quelques données clés telles que les revenus et les dépenses annuels, le taux de croissance des revenus, les dépenses annuelles prévues à la retraite et la répartition des actifs. Il s'agit d'un calculateur de préretraite qui est utile avant votre départ à la retraite pour avoir une idée du nombre d'années qu'il vous faudra probablement pour accumuler suffisamment d'argent pour prendre votre retraite.\n                </p>\n                <strong>TODO</strong>\n                <ul style={{ margin: 0, marginBottom: 16 }}>\n                    <li>\n                        ajouter un moyen d'investir sur des periodes differentes (ex: chaque mois, toutes les 2 semaines).\n                    </li>\n                    <li>\n                        avoir plus de cohérance au niveau des couleurs des graphiques.\n                    </li>\n                    <li>\n                        ajouter cash et gold au portfolio.\n                    </li>\n                    <li>\n                        afficher le nombre d'année avant retraite.\n                    </li>\n                    <li>\n                        modifier les informations flottantes des graphiques.\n                    </li>\n                    <li>\n                        faire une meilleur verification des formulaires + changer les pourcentages de 0.8 a 80%\n                    </li>\n                </ul>\n            </div>\n            <Simulator />\n        </article>\n    )\n}\n\nexport default EarlyRetirement\n","import EarlyRetirement from './EarlyRetirement'\n\nexport default EarlyRetirement\n","import React from 'react'\nimport { Routes, Route, Outlet } from 'react-router-dom'\nimport { AppProvider } from './AppContext'\n\nimport Menu from './components/Menu'\nimport Home from './components/Home'\nimport EarlyRetirement from './components/EarlyRetirement'\n\nconst Content = (props) => (\n    <main {...props} >\n        <Outlet />\n        {/*\n        <aside>\n        </aside>\n        */}\n    </main>\n)\n\nfunction App() {\n  return (\n      <AppProvider>\n        <Menu />\n        <Routes>\n            <Route path='/*' element={<Content />} >\n                <Route path='' element={<Home />} />\n                <Route path='early-retirement' element={<EarlyRetirement />} />\n            </Route>\n        </Routes>\n      </AppProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"Results_results__3Bszj\",\"main\":\"Results_main__33oQQ\",\"informations\":\"Results_informations__3P7aK\",\"click\":\"Results_click__3TZpp\"};"],"sourceRoot":""}